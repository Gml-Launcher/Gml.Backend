name: gml-core

services:

  gml-web-api:
    image: gml-web-api-image
    container_name: gml-web-api
    restart: always
    build:
      context: src/Gml.Web.Api
      dockerfile: Dockerfile
    volumes:
      - ./data/GmlBackend:/root/${PROJECT_NAME}
    ports:
      - ":8082"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8082;
      - SECURITY_KEY=${SECURITY_KEY}
      - PROJECT_NAME=${PROJECT_NAME}
      - MARKET_ENDPOINT=${MARKET_ENDPOINT}
      - PROJECT_DESCRIPTION=${PROJECT_DESCRIPTION}
      - PROJECT_POLICYNAME=${PROJECT_POLICYNAME}
      - PROJECT_PATH=${PROJECT_PATH}
      - SERVICE_TEXTURE_ENDPOINT=${SERVICE_TEXTURE_ENDPOINT}
      - TZ=Europe/Moscow
    user: "${UID}:${GID}"
    networks:
      - gml-network

  gml-web-proxy:
    image: gml-web-proxy-image
    container_name: gml-web-proxy
    restart: always
    build:
      context: src/Gml.Web.Proxy
      dockerfile: Dockerfile
    ports:
      - "${PORT_GML_FRONTEND}:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080;
      - TZ=Europe/Moscow
    user: "${UID}:${GID}"
    networks:
      - gml-network

  gml-web-frontend:
    image: gml-web-frontend-image
    container_name: gml-web-frontend
    restart: always
    build:
      context: src/Gml.Web.Client
      dockerfile: Dockerfile
    ports:
      - ":8081"
    networks:
      - gml-network
    environment:
      - TZ=Europe/Moscow

  gml-web-skins:
    image: gml-web-skins-image
    container_name: gml-web-skins
    restart: always
    build:
      context: src/Gml.Web.Skin.Service
      dockerfile: Dockerfile
    ports:
      - ":8085"
    networks:
      - gml-network
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - NEXT_PUBLIC_MARKETPLACE_URL=${MARKET_ENDPOINT}
      - NEXT_PUBLIC_BACKEND_URL=${BACKEND_ENDPOINT}
      - ASPNETCORE_URLS=http://+:8085;
      - TZ=Europe/Moscow
    user: "${UID}:${GID}"
    volumes:
      - ./data/TextureService:/app/Storage

networks:
  gml-network:
    attachable: true
